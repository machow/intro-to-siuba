{"hash":"50bdab72aa6540221f08214ab3b9840986c51c83","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"page":{"id":"ed3e60b58cc1c655ccddd7a30380a224","title":"Getting started","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  useStorage=\"1\"\n  >\n\n\n<details v-fix-codemirror v-show=\"nb.debut\">\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\"  language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    \n    # wranglign ---------\n    import pandas as pd\n    from siuba import *\n    \n    # plotting ----------\n    from plotnine import *\n    \n    theme_set(theme_classic(base_family = \"Noto Sans CJK JP\"))\n    \n    # data --------------\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/music200.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv\"\n    music_top200 = pd.read_csv(fname)\n    \n    # tracks\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/track_features.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv\"\n    track_features = pd.read_csv(fname)\n    \n    # student support ----------\n    from siuba import pipe\n    from IPython.display import HTML, display\n    from siututor import Blank\n    ___ = Blank()\n    \n    # DataFrame display --------\n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # here, we avoid the default df._repr_html_ method, since it inlines css\n    # (style tags make vue angry)\n    html_formatter.for_type(\n        pd.DataFrame,\n        lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\"), show_dimensions = True)\n    )\n    \n    \n\n\n\n\n</code-cell>\n</details>\n\nimport slides from '../slides/02-slides.markdown'\n\n<RevealSlides :slides=\"slides\" />\n\n### Exercise 1: \n\nIn this exercise, there are two code cells. The first defines variables for tracks by different artists. The second creates a plot.\n\nRead through the code and plot, and then modify it to answer the question beneath.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    roddy = (\n      track_features\n      >> filter(_.artist == \"Roddy Ricch\")\n    )\n    \n    billie = (\n      track_features\n      >> filter(_.artist == \"Billie Eilish\")\n    )\n    \n    other = (\n      track_features\n      >> filter(_.artist == \"ITZY\")\n    )\n    \n    other\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>artist</th>\n      <th>album</th>\n      <th>track_name</th>\n      <th>energy</th>\n      <th>valence</th>\n      <th>danceability</th>\n      <th>speechiness</th>\n      <th>acousticness</th>\n      <th>popularity</th>\n      <th>duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1432</th>\n      <td>ITZY</td>\n      <td>IT'z Different</td>\n      <td>달라달라 (DALLA DALLA)</td>\n      <td>0.853</td>\n      <td>0.713</td>\n      <td>0.790</td>\n      <td>0.0665</td>\n      <td>0.00116</td>\n      <td>73</td>\n      <td>199.874</td>\n    </tr>\n    <tr>\n      <th>21149</th>\n      <td>ITZY</td>\n      <td>IT'z Different</td>\n      <td>달라달라 DALLA DALLA</td>\n      <td>0.853</td>\n      <td>0.713</td>\n      <td>0.790</td>\n      <td>0.0665</td>\n      <td>0.00116</td>\n      <td>57</td>\n      <td>199.874</td>\n    </tr>\n    <tr>\n      <th>22389</th>\n      <td>ITZY</td>\n      <td>It'z Me</td>\n      <td>WANNABE</td>\n      <td>0.911</td>\n      <td>0.640</td>\n      <td>0.809</td>\n      <td>0.0617</td>\n      <td>0.00795</td>\n      <td>81</td>\n      <td>191.242</td>\n    </tr>\n    <tr>\n      <th>25288</th>\n      <td>ITZY</td>\n      <td>IT'z ICY</td>\n      <td>ICY</td>\n      <td>0.904</td>\n      <td>0.814</td>\n      <td>0.801</td>\n      <td>0.0834</td>\n      <td>0.03240</td>\n      <td>72</td>\n      <td>191.142</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows × 10 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\nThe code below plots hits for the `roddy` variable.\nNote that you could swap out `roddy` for any of the other two variables above.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (roddy\n      >> ggplot(aes(\"danceability\", \"speechiness\"))\n       + geom_point()\n       + expand_limits(x = [0, 1], y = [0, 1])\n    )\n\n\n<template v-slot:output>\n\n\n![png](./02a-intro-data-viz_files/02a-intro-data-viz_5_0.png)\n\n\n\n\n\n    <ggplot: (302456619)>\n\n\n\n</template>\n\n</code-cell>\n\n\n\n\n<prompt-expandable header=\"Who has the widest range of danceability? (i.e. biggist difference between highest and lowest)\">\n\n<q-multiple-choice>\n  <q-opt text=\"Roddy Ricch\"><span>Try again.</span></q-opt>\n  <q-opt text=\"Billie Eilish\"><span>That's right!</span></q-opt>\n  <q-opt text=\"ITZY\"><span>Try again. All the ITZY songs shown have roughly the same danceability.</span></q-opt>\n</q-multiple-choice>\n\n</prompt-expandable>\n\n\n\n### Exercise 2:\n\nDoes it look like there any extremely popular songs over 15 minutes long?\n\nThere is not one concrete answer to this question.\nMake a plot below, and come up with an answer you might share with another person.\n\n<details><summary>hint</summary>\n\n> The duration column contains the length of each song in seconds. Use this with the popularity column.\n\n</details>\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (track_features\n      >> ggplot()\n    \n    )\n\n\n<template v-slot:output>\n\n\n![png](./02a-intro-data-viz_files/02a-intro-data-viz_8_0.png)\n\n\n\n\n\n    <ggplot: (-9223372036551312310)>\n\n\n\n</template>\n\n</code-cell>\n\n\n<details>\n<summary>possible answers</summary>\n    \n<a target=\"_blank\" href=\"https://v.usetapes.com/XhWxJ9lAox\">screencast</a>\n    \n    \n</details>\n\n### Exercise 3:\n\nDoes the lowest energy track belong to a \"low energy\" artist? In this exercise, we'll explore the questions using tracks by two artists.\n\nHere is the track data sorted by energy.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # this code is to help you examine track energy levels \n    (\n      track_features\n      >> arrange(_.energy)\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>artist</th>\n      <th>album</th>\n      <th>track_name</th>\n      <th>energy</th>\n      <th>valence</th>\n      <th>danceability</th>\n      <th>speechiness</th>\n      <th>acousticness</th>\n      <th>popularity</th>\n      <th>duration</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1003</th>\n      <td>Simon Smith</td>\n      <td>Loops</td>\n      <td>Blagaslavlaju vas</td>\n      <td>0.000778</td>\n      <td>0.000</td>\n      <td>0.779</td>\n      <td>0.4210</td>\n      <td>0.99400</td>\n      <td>0</td>\n      <td>36.038</td>\n    </tr>\n    <tr>\n      <th>5996</th>\n      <td>DMS</td>\n      <td>Prepáčte</td>\n      <td>Nič</td>\n      <td>0.000791</td>\n      <td>0.000</td>\n      <td>0.571</td>\n      <td>0.4460</td>\n      <td>0.95000</td>\n      <td>25</td>\n      <td>37.355</td>\n    </tr>\n    <tr>\n      <th>16690</th>\n      <td>Peter Simon</td>\n      <td>Snowrain</td>\n      <td>Snowrain</td>\n      <td>0.003480</td>\n      <td>0.373</td>\n      <td>0.472</td>\n      <td>0.0517</td>\n      <td>0.99600</td>\n      <td>0</td>\n      <td>31.000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>22696</th>\n      <td>Nino Xypolitas</td>\n      <td>Epireastika</td>\n      <td>Eime Enas Allos - Original</td>\n      <td>0.996000</td>\n      <td>0.517</td>\n      <td>0.644</td>\n      <td>0.1030</td>\n      <td>0.00346</td>\n      <td>34</td>\n      <td>214.693</td>\n    </tr>\n    <tr>\n      <th>17073</th>\n      <td>Otira</td>\n      <td>Soundboy Burnin’</td>\n      <td>Soundboy Burnin’</td>\n      <td>0.997000</td>\n      <td>0.327</td>\n      <td>0.568</td>\n      <td>0.2330</td>\n      <td>0.00299</td>\n      <td>14</td>\n      <td>173.846</td>\n    </tr>\n    <tr>\n      <th>11070</th>\n      <td>Scooter</td>\n      <td>No Time To Chill</td>\n      <td>How Much Is the Fish?</td>\n      <td>0.999000</td>\n      <td>0.615</td>\n      <td>0.533</td>\n      <td>0.0786</td>\n      <td>0.00130</td>\n      <td>48</td>\n      <td>226.200</td>\n    </tr>\n  </tbody>\n</table>\n<p>25322 rows × 10 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\n Notice that Simon Smith has the lowest energy song (\"Blagaslavlaju vas\"), while Scooter has the highest energy song (\"How Much is the Fish?\").\n\nFirst, filter the track_features data to create a variable named `artist_low` that has only tracks by the artist Simon Smith.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # create artist_low variable here\n    \n    artist_low = (\n        \n    )\n\n\n\n\n</code-cell>\n\n\nNext, create a variable named `artist_high` with tracks by the artist Scooter, who has the highest energy song.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # create artist_high variable here\n    \n     \n\n\n\n\n</code-cell>\n\n\nBased on separate plots of their data, does the artist with the lowest energy track seem to have lower energy songs in general?\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # examine plots of each artist, to answer question\n    # note, we're examining energy, so to make a scatterplot you could set\n    # the second variable to anything interesting (e.g. popularity)\n    \n    (___\n    \n    )\n\n\n<template v-slot:output>\n\n\n\n\n⚠️: <b>Don't forget to replace all the blanks!</b>\n\n\n\n</template>\n\n</code-cell>\n\n\n<details><summary>possible answer</summary>\n\nThe high energy artist, Scooter, seems to only have high energy songs (from about .9 to 1 energy).\n    \nOn the other hand, the low energy artist, Simon Smith, seems to have a wide range of energy values (from about 0 to 1 energy).\n</details>\n\n\n</Notebook>\n\n","chapters":[],"authors":[],"resources":[]}},"context":{}}