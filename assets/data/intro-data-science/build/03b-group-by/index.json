{"hash":"39b83d602c2799b7a6ebfedbc27f1e1d109a7f85","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"page":{"id":"19c2db78356c5b0bad11c1668ade5b37","title":"Group by","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  useStorage=\"1\"\n  >\n\n\n<details v-fix-codemirror v-show=\"nb.debut\">\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\"  language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    \n    # wranglign ---------\n    import pandas as pd\n    from siuba import *\n    \n    # plotting ----------\n    from plotnine import *\n    \n    theme_set(theme_classic(base_family = \"Noto Sans CJK JP\"))\n    \n    # data --------------\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/music200.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv\"\n    music_top200 = pd.read_csv(fname)\n    \n    # tracks\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/track_features.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv\"\n    track_features = pd.read_csv(fname)\n    \n    # student support ----------\n    from siuba import pipe\n    from IPython.display import HTML, display\n    from siututor import Blank\n    ___ = Blank()\n    \n    # DataFrame display --------\n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # here, we avoid the default df._repr_html_ method, since it inlines css\n    # (style tags make vue angry)\n    html_formatter.for_type(\n        pd.DataFrame,\n        lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\"), show_dimensions = True)\n    )\n    \n    \n\n\n\n\n</code-cell>\n</details>\n\n\nimport slides from '../slides/03b-slides.markdown'\n\n<RevealSlides :slides=\"slides\" />\n\n### Exercise 1:\n\nModify the code below so it calculates max popularity and average danceability **for each artist**.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    artists = (track_features\n      >> summarize(\n          max_popularity = _.popularity.max(),\n          avg_danceability = _.danceability.mean()\n      )\n    )\n    artists\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>max_popularity</th>\n      <th>avg_danceability</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>99</td>\n      <td>0.677941</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows Ã— 2 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\nMake a scatterplot of the data.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n<pre><code>\n\n\n\n</code></pre>\n\n\n</code-cell>\n\n\nIn the plot above, what strange thing is going on with the distribution of max popularity?\n\n<details>\n<summary>possible answer</summary>\n\nThere are many artists with a max popularity of 0! \n  \n</details>    \n\n### Exercise 2:\n\nIn the last exercise of the facets chapter, you examined track features for three artists.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # This code keeps the 3 artists listed ----\n    \n    artists_to_keep = [\"Billie Eilish\", \"ITZY\", \"Roddy Ricch\"]\n    \n    some_artists = (\n      track_features\n      >> filter(_.artist.isin(artists_to_keep))\n    )\n    \n    #uncomment line below to see data\n    #some_artists\n\n\n\n\n</code-cell>\n\n\nWe used a plot and intuition to judge who tended to have highest energy and valence tracks.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # This code plots the data ----\n    (some_artists\n      >> ggplot(aes(\"energy\", \"valence\", color = \"artist\"))\n       + geom_point()\n       + facet_wrap(\"~artist\", nrow = 1)\n       + labs(title = \"Song features across 3 artists\")\n    )\n\n\n<template v-slot:output>\n\n    findfont: Font family ['Noto Sans CJK JP'] not found. Falling back to DejaVu Sans.\n\n\n\n![png](./03b-group-by_files/03b-group-by_11_1.png)\n\n\n\n\n\n    <ggplot: (296180684)>\n\n\n\n</template>\n\n</code-cell>\n\n\nNow you should be able to answer the question more directly!\n\n**Use a grouped summarize to calculate the mean energy and valence for each artist**.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n<pre><code># summarizing mean energy and valence for each artist\n\n\n\n</code></pre>\n\n\n</code-cell>\n\n\nQ: In this data, which artist has the lowest average energy, and what is its value?\n\n<details><summary>answer</summary>Billie Eilish, 0.321004</details>\n\nQ: What about for lowest average valence?\n\n<details><summary>answer</summary>Billie Eilish, 0.266948</details>\n\n\n</Notebook>\n\n","chapters":[],"authors":[],"resources":[]}},"context":{}}