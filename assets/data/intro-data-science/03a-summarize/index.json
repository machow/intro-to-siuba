{"hash":"ac97d0240b0403f422f54a34c582b35e428a3a84","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"post":{"id":"98a1621bf786d17a1e8b3d4bdb9f898c","title":"Summarize","content":"\n<Notebook\n  v-slot=\"nb\"\n  branch=\"master\"\n  repo=\"machow/purview\"\n  url=\"https://mybinder.org\"\n  useBinder=\"1\"\n  useStorage=\"1\"\n  >\n\n\n<details v-fix-codemirror v-show=\"nb.debut\">\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\"  language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    \n    # wranglign ---------\n    import pandas as pd\n    from siuba import *\n    \n    # plotting ----------\n    from plotnine import *\n    \n    theme_set(theme_classic(base_family = \"Noto Sans CJK JP\"))\n    \n    # data --------------\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/music200.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/music200.csv\"\n    music_top200 = pd.read_csv(fname)\n    \n    # tracks\n    #fname = \"/Users/machow/Dropbox/Repo/siublocks-org/intro-tidyverse/tutorial/data/track_features.csv\"\n    fname = \"https://siublocks.s3.us-east-2.amazonaws.com/course-data/track_features.csv\"\n    track_features = pd.read_csv(fname)\n    \n    # student support ----------\n    from siuba import pipe\n    from IPython.display import HTML, display\n    from siututor import Blank\n    ___ = Blank()\n    \n    # DataFrame display --------\n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # here, we avoid the default df._repr_html_ method, since it inlines css\n    # (style tags make vue angry)\n    html_formatter.for_type(\n        pd.DataFrame,\n        lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\"), show_dimensions = True)\n    )\n    \n    \n\n\n\n\n</code-cell>\n</details>\n\n\nimport slides from '../slides/03a-slides.markdown'\n\n<RevealSlides :slides=\"slides\" />\n\n### Exercise 1:\n\nThe code below calculates the average duration.\n\n* Uncomment the summarize verb.\n* Change it to calculate median duration.\n* Make sure to change the resulting column name to indicate its a median.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (music_top200\n      #>> summarize(avg_duration = _.duration.mean())\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n<p>12400 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\nQ: what is the median duration?\n\n<details><summary>answer</summary>201.084</details>\n\nQ: Add a second argument to summarize, which calculates the sum of streams. How large is it?\n\n<details><summary>answer</summary>301,822,525</details>\n\n### Exercise 2:\n\nUse verbs you learned in chapter 1 to do the following:\n\n* find the track with the lowest duration\n* subset the data to keep only the row for that track\n\n(Note, you may need to run code multiple times)\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (music_top200\n    \n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n<p>12400 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\nNow, use summarize to calculate the min duration, and the max duration directly.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (music_top200\n    \n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n<p>12400 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\n<prompt-expandable header=\"Why would you use summarize like this, rather than the arrange and filter approach?\">\n\n<q-multiple-choice>\n  <q-opt text=\"The min and max values might be in different observations (rows).\"><span>That's right. Filter keeps specific rows, but summarize can collect values from across rows.</span></q-opt>\n  <q-opt text=\"It keeps more of the original data.\"><span>Try again. Filter keeps all the variables (columns), while summarize will remove most of them.</span></q-opt>\n  <q-opt text=\"The arrange and filter approach can do anything summarize can.\"><span>Try again.</span></q-opt>\n</q-multiple-choice>\n\n</prompt-expandable>\n\n\n### Exercise 3:\n\nThe examples below show what happens verbs like filter and mutate use methods like `.mean()`.\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # create column for average streams\n    (music_top200\n      >> mutate(avg_streams = _.streams.mean())\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n      <th>avg_streams</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n      <td>243405.2625</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n      <td>243405.2625</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n      <td>243405.2625</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n      <td>243405.2625</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n      <td>243405.2625</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n      <td>243405.2625</td>\n    </tr>\n  </tbody>\n</table>\n<p>12400 rows × 8 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # keep observations where streams are above average\n    (music_top200\n      >> filter(_.streams < _.streams.mean())\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>108</th>\n      <td>Argentina</td>\n      <td>109</td>\n      <td>Me Gusta</td>\n      <td>Ciro y los Persas</td>\n      <td>243159</td>\n      <td>289.093</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>109</th>\n      <td>Argentina</td>\n      <td>110</td>\n      <td>Tal Vez</td>\n      <td>Paulo Londra</td>\n      <td>242870</td>\n      <td>264.483</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>110</th>\n      <td>Argentina</td>\n      <td>111</td>\n      <td>Physical</td>\n      <td>Dua Lipa</td>\n      <td>239225</td>\n      <td>193.829</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n<p>9341 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\nBased on the examples above, can you use only the filter verb to get the most streamed song in all the data?\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    # modify the filter verb below\n    \n    (music_top200\n      >> filter()\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Argentina</td>\n      <td>1</td>\n      <td>Tusa</td>\n      <td>KAROL G</td>\n      <td>1858666</td>\n      <td>200.960</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Argentina</td>\n      <td>2</td>\n      <td>Tattoo</td>\n      <td>Rauw Alejandro</td>\n      <td>1344382</td>\n      <td>202.887</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Argentina</td>\n      <td>3</td>\n      <td>Hola - Remix</td>\n      <td>Dalex</td>\n      <td>1330011</td>\n      <td>249.520</td>\n      <td>Americas</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>12397</th>\n      <td>South Africa</td>\n      <td>198</td>\n      <td>Black And White</td>\n      <td>Niall Horan</td>\n      <td>11771</td>\n      <td>193.090</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12398</th>\n      <td>South Africa</td>\n      <td>199</td>\n      <td>When I See U</td>\n      <td>Fantasia</td>\n      <td>11752</td>\n      <td>217.347</td>\n      <td>Africa</td>\n    </tr>\n    <tr>\n      <th>12399</th>\n      <td>South Africa</td>\n      <td>200</td>\n      <td>Psycho!</td>\n      <td>MASN</td>\n      <td>11743</td>\n      <td>197.217</td>\n      <td>Africa</td>\n    </tr>\n  </tbody>\n</table>\n<p>12400 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  ex=\"a\" :exIndx=\"0\" language=\"python\">\n\n\n    (music_top200\n      >> filter(_.streams == _.streams.max())\n    )\n\n\n<template v-slot:output>\n\n\n\n\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>country</th>\n      <th>position</th>\n      <th>track_name</th>\n      <th>artist</th>\n      <th>streams</th>\n      <th>duration</th>\n      <th>continent</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>7800</th>\n      <td>United States</td>\n      <td>1</td>\n      <td>The Box</td>\n      <td>Roddy Ricch</td>\n      <td>12987027</td>\n      <td>196.653</td>\n      <td>Americas</td>\n    </tr>\n  </tbody>\n</table>\n<p>1 rows × 7 columns</p>\n\n\n\n</template>\n\n</code-cell>\n\n\n<details><summary>What is the most streamed song?</summary>The Box by Roddy Ricch</details>\n\n\n</Notebook>\n\n","path":"/intro-data-science/03a-summarize/","chunk":"summarize"},"allPosts":{"edges":[{"node":{"id":"70aca792c3bd9402c478719aaeced6ea","path":"/intro-data-science/01-intro-data-science/","title":"Course welcome","chunk":"overview","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/01b-filter/"},"previous":null},{"node":{"id":"b248bcadc7a7c3e259b696b86bf788bb","path":"/intro-data-science/01b-filter/","title":"Filter","chunk":"wrangle","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/01c-arrange/"},"previous":{"path":"/intro-data-science/01-intro-data-science/"}},{"node":{"id":"f0f155c73324ca8341153a77f835d7aa","path":"/intro-data-science/01c-arrange/","title":"Arrange","chunk":"wrangle","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/01d-mutate/"},"previous":{"path":"/intro-data-science/01b-filter/"}},{"node":{"id":"f38a981d7980d3341288a62ad4ca197b","path":"/intro-data-science/01d-mutate/","title":"Mutate","chunk":"wrangle","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/01f-wrap-up/"},"previous":{"path":"/intro-data-science/01c-arrange/"}},{"node":{"id":"3eb652d93c91fa48c380384186b3c985","path":"/intro-data-science/01f-wrap-up/","title":"Wrap up","chunk":"wrangle","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/02a-intro-data-viz/"},"previous":{"path":"/intro-data-science/01d-mutate/"}},{"node":{"id":"9d2f4411043c98dafa7dc0155fabc295","path":"/intro-data-science/02a-intro-data-viz/","title":"Getting started","chunk":"visualize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/02b-geoms/"},"previous":{"path":"/intro-data-science/01f-wrap-up/"}},{"node":{"id":"aaaf420ef287f7789159f9704c98d482","path":"/intro-data-science/02b-geoms/","title":"Geoms","chunk":"visualize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/02c-aesthetics/"},"previous":{"path":"/intro-data-science/02a-intro-data-viz/"}},{"node":{"id":"8f0b1ffaafd0fc1d57a76da777025184","path":"/intro-data-science/02c-aesthetics/","title":"Aesthetics","chunk":"visualize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/02d-facets/"},"previous":{"path":"/intro-data-science/02b-geoms/"}},{"node":{"id":"bf00653c2b9d8409e16eaac5f3701aac","path":"/intro-data-science/02d-facets/","title":"Facets","chunk":"visualize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/03a-summarize/"},"previous":{"path":"/intro-data-science/02c-aesthetics/"}},{"node":{"id":"98a1621bf786d17a1e8b3d4bdb9f898c","path":"/intro-data-science/03a-summarize/","title":"Summarize","chunk":"summarize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/03b-group-by/"},"previous":{"path":"/intro-data-science/02d-facets/"}},{"node":{"id":"b313630b24b079697cfdfff7304d9a91","path":"/intro-data-science/03b-group-by/","title":"Group by","chunk":"summarize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/03c-summary-viz/"},"previous":{"path":"/intro-data-science/03a-summarize/"}},{"node":{"id":"702682f5a3ce4836951e9037f4715dd8","path":"/intro-data-science/03c-summary-viz/","title":"Visualizing summaries","chunk":"summarize","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/04a-line-plots/"},"previous":{"path":"/intro-data-science/03b-group-by/"}},{"node":{"id":"b6041de6ad2806a765dd63be03fbcc49","path":"/intro-data-science/04a-line-plots/","title":"Line plots","chunk":"plot types","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/04b-barcharts/"},"previous":{"path":"/intro-data-science/03c-summary-viz/"}},{"node":{"id":"24d15768ab2220c7de736e830f0e6176","path":"/intro-data-science/04b-barcharts/","title":"Bar plots","chunk":"plot types","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/04c-histograms/"},"previous":{"path":"/intro-data-science/04a-line-plots/"}},{"node":{"id":"51cf0e9d48f5a74d24e8e2329b0e38d5","path":"/intro-data-science/04c-histograms/","title":"Histograms","chunk":"plot types","headings":[],"fileInfo":{"directory":""}},"next":{"path":"/intro-data-science/04d-boxplot/"},"previous":{"path":"/intro-data-science/04b-barcharts/"}},{"node":{"id":"090e6f2b51004db3211de82289530df2","path":"/intro-data-science/04d-boxplot/","title":"Boxplots","chunk":"plot types","headings":[],"fileInfo":{"directory":""}},"next":null,"previous":{"path":"/intro-data-science/04c-histograms/"}}]}},"context":{}}