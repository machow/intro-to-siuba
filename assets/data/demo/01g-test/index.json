{"hash":"ac97d0240b0403f422f54a34c582b35e428a3a84","data":{"metadata":{"siteName":"Siuba tutorials","siteDescription":""},"page":{"id":"99bd9951ae496c94fceae03ead6ee5a5","title":"Wrap up","content":"\nimport CodeGallery from '~/components/edutools/CodeGallery.vue'\n\n<Notebook\n  v-slot=\"nb\"\n  >\n\n\n# Wrap up\n\n\n<details v-fix-codemirror>\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\" :onReady=\"nb.updateSetupCode\" language=\"python\">\n\n\n    # TODO: explain how to run this, and that they only need the gist (loads tools)\n    \n    \n    import pandas as pd\n    from siuba import arrange, select, mutate, filter, _\n    from plotnine import ggplot, geom_point, coord_flip, aes, labs\n    \n    # temporary until I figure out where to put data\n    url = \"https://siublocks.s3.us-east-2.amazonaws.com/music_top200.csv\"\n    music_top200 = pd.read_csv(url)\n    \n    \n    # TODO: shift into a package or file\n    from siuba import pipe\n    from IPython.display import HTML, display\n    ___ = pipe(lambda x: display(HTML(\"⚠️: <b>Don't forget to replace all the blanks!<b>\")) and _)\n    \n    pd.set_option(\"display.max_rows\", 6)\n    \n    from IPython import get_ipython\n    # special ipython function to get the html formatter\n    html_formatter = get_ipython().display_formatter.formatters['text/html']\n    \n    # when you see a Shout object, call the shout_html function on it\n    html_formatter.for_type(pd.DataFrame, lambda df: df.to_html(max_rows = pd.get_option(\"display.max_rows\")))\n\n\n\n\n</code-cell>\n</details>\n\n<CodeGallery :tabs=\"['a', 'b','c']\">\n\n<!-- panel A -->\n<template v-slot:tab-panel-a>\n\n## Putting it together\n\nTODO: explain\n\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    (music_top200 \n      >> filter(_.position == 1)\n      >> select(_.country, _.energy, _.acousticness) \n      >> ggplot(aes(\"energy\", \"acousticness\")) + geom_point()\n    )\n\n\n  <template v-slot:output>\n\n\n  ![png](./01f-wrap-up_files/01f-wrap-up_3_0.png)\n  \n  \n  \n  \n  \n      <ggplot: (-9223372036578420543)>\n\n\n\n  </template>\n\n</code-cell>\n\n</template>\n\n<!-- panel B -->\n<template v-slot:tab-panel-b>\n\n<code-cell  :status=\"nb.status\" :onExecute=\"nb.execute\"  language=\"python\">\n\n\n    # TODO: don't include hours, introduce a lot of baggage\n    #hours = 3600*1000 \n    \n    (music_top200\n      >> filter(_.country == \"Hong Kong\")\n      >> mutate(stream_ms = _.streams * _.duration_ms)\n    #  >> mutate(stream_hours = (_.streams * _.duration_ms) / hours)\n      >> select(_.stream_ms, _.position, _.acousticness, _.energy)\n      >> ggplot(aes(\"stream_ms\", \"position\")) + geom_point()\n    )\n\n\n<template v-slot:output>\n\n\n![png](./01f-wrap-up_files/01f-wrap-up_4_0.png)\n\n\n\n\n\n    <ggplot: (276356139)>\n\n\n\n</template>\n\n</code-cell>\n\n</template>\n\n</CodeGallery>\n\n\n\n\n## Exercises\n\n* What is Argentina's 10th most popular song? What's their most danceable song?\n  (future note: we can't filter eg 10th most danceable yet)\n* TODO: add more\n\nAdvanced\n\n* Notice how we could filter songs in the 5th most streamed position, but not the 5th most danceable. (Show row_number called directly on Series, invite to put into mutate)\n\n\n\n\n</Notebook>\n\n","chapters":[],"authors":[],"resources":[]}},"context":{}}